enclave {
	include "librats/api.h"
    include "librats/verifier.h"
    include "librats/attester.h"
	include "librats/err.h"
	include "sgx_report.h"
	include "sgx_quote_3.h"

	from "sgx_dcap_tvl.edl" import *;

	trusted {
		public sgx_status_t rats_ecall_get_target_info([out] sgx_target_info_t* target_info);
	};

	untrusted {
		void rats_ocall_get_target_info([out] sgx_target_info_t *qe_target_info);

		rats_attester_err_t rats_ocall_qe_get_quote_size([out] uint32_t *quote_size);

		rats_attester_err_t rats_ocall_qe_get_quote([in]sgx_report_t *report, uint32_t quote_size,
                                                [out, size=quote_size] uint8_t *quote);

		rats_verifier_err_t rats_ocall_ecdsa_verify_evidence([user_check] rats_verifier_ctx_t *ctx,
                                                                sgx_enclave_id_t enclave_id,
                                                                [in, string] const char *name,
                                                                [in, size=quote_size] sgx_quote3_t *pquote,
                                                                uint32_t quote_size)
			allow(rats_ecall_get_target_info, sgx_tvl_verify_qve_report_and_identity);
	};
};
